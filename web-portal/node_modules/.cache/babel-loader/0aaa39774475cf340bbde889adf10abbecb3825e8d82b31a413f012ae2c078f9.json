{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PotiriadisN\\\\code\\\\fullstack_exercise\\\\web-portal\\\\src\\\\components\\\\sort.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let filteredRecords = {};\nfunction testSort(e) {\n  _s();\n  useEffect(() => {\n    async function getRecords(table) {\n      const response = await fetch(`http://localhost:5050/record/table`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          table: table\n        })\n      });\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      if (table == \"iotDB\") {\n        let iotRecords = await response.json();\n        setIotRecords(iotRecords);\n      } else if (table == \"industriesDB\") {\n        let records = await response.json();\n        setRecords(records);\n      }\n    }\n    getRecords(\"iotDB\");\n    getRecords(\"industriesDB\");\n    // window.alert(filteredRecords);\n\n    return;\n  }, [records.length]);\n}\n_s(testSort, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport class Sort extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: testSort,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Silicon Manufacturing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Gaming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  }\n}","map":{"version":3,"names":["React","useEffect","useState","Component","jsxDEV","_jsxDEV","filteredRecords","testSort","e","_s","getRecords","table","response","fetch","method","headers","body","JSON","stringify","ok","message","statusText","window","alert","iotRecords","json","setIotRecords","records","setRecords","length","Sort","render","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/PotiriadisN/code/fullstack_exercise/web-portal/src/components/sort.js"],"sourcesContent":["import React, { useEffect, useState, Component } from \"react\";\r\n\r\nexport let filteredRecords = {};\r\n\r\nfunction testSort(e) {\r\n    useEffect(() => {\r\n        async function getRecords(table) {\r\n            const response = await fetch(`http://localhost:5050/record/table`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ table: table }),\r\n\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const message = `An error occurred: ${response.statusText}`;\r\n                window.alert(message);\r\n                return;\r\n            }\r\n            if (table == \"iotDB\") {\r\n                let iotRecords = await response.json();\r\n                setIotRecords(iotRecords);\r\n            }\r\n            else if (table == \"industriesDB\") {\r\n                let records = await response.json();\r\n                setRecords(records);\r\n            }\r\n\r\n        }\r\n        getRecords(\"iotDB\");\r\n        getRecords(\"industriesDB\");\r\n        // window.alert(filteredRecords);\r\n\r\n\r\n\r\n        return;\r\n    }, [records.length]);\r\n\r\n}\r\n\r\n\r\nexport class Sort extends Component {\r\n    render() {\r\n        return (\r\n        <select onChange={testSort}> \r\n            <option>Silicon Manufacturing</option>\r\n            <option>Gaming</option>\r\n        </select>)\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,IAAIC,eAAe,GAAG,CAAC,CAAC;AAE/B,SAASC,QAAQA,CAACC,CAAC,EAAE;EAAAC,EAAA;EACjBR,SAAS,CAAC,MAAM;IACZ,eAAeS,UAAUA,CAACC,KAAK,EAAE;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP,KAAK,EAAEA;QAAM,CAAC;MAEzC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QACd,MAAMC,OAAO,GAAI,sBAAqBR,QAAQ,CAACS,UAAW,EAAC;QAC3DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACJ;MACA,IAAIT,KAAK,IAAI,OAAO,EAAE;QAClB,IAAIa,UAAU,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;QACtCC,aAAa,CAACF,UAAU,CAAC;MAC7B,CAAC,MACI,IAAIb,KAAK,IAAI,cAAc,EAAE;QAC9B,IAAIgB,OAAO,GAAG,MAAMf,QAAQ,CAACa,IAAI,CAAC,CAAC;QACnCG,UAAU,CAACD,OAAO,CAAC;MACvB;IAEJ;IACAjB,UAAU,CAAC,OAAO,CAAC;IACnBA,UAAU,CAAC,cAAc,CAAC;IAC1B;;IAIA;EACJ,CAAC,EAAE,CAACiB,OAAO,CAACE,MAAM,CAAC,CAAC;AAExB;AAACpB,EAAA,CApCQF,QAAQ;AAuCjB,OAAO,MAAMuB,IAAI,SAAS3B,SAAS,CAAC;EAChC4B,MAAMA,CAAA,EAAG;IACL,oBACA1B,OAAA;MAAQ2B,QAAQ,EAAEzB,QAAS;MAAA0B,QAAA,gBACvB5B,OAAA;QAAA4B,QAAA,EAAQ;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtChC,OAAA;QAAA4B,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAEb;AAGJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}