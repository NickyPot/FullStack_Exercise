{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PotiriadisN\\\\code\\\\fullstack_exercise\\\\web-portal\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table({\n  columns,\n  data\n}) {\n  _s();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  // Render the UI for your table\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    className: \"table table-bordered table-condensed table-responsive\",\n    style: {\n      'display': 'table'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Table, \"4/P1jgaSw+1Cet3/nijTZVF77p4=\", false, function () {\n  return [useTable];\n});\n_c = Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useTable","jsxDEV","_jsxDEV","Table","columns","data","_s","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","style","children","map","headerGroup","getHeaderGroupProps","headers","column","render","fileName","_jsxFileName","lineNumber","columnNumber","row","i","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/PotiriadisN/code/fullstack_exercise/web-portal/src/components/Table.js"],"sourcesContent":["import React from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nexport default function Table({ columns, data }) {\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data\r\n        }\r\n    );\r\n\r\n\r\n    // Render the UI for your table\r\n    return (\r\n        <table {...getTableProps()} className=\"table table-bordered table-condensed table-responsive\" style={{ 'display': 'table' }} >\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th >\r\n                                {column.render(\"Header\")}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {rows.map((row, i) => {\r\n                    prepareRow(row);\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return (\r\n                                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                                );\r\n                            })}\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,KAAKA,CAAC;EAAEC,OAAO;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM;IACFC,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC;EACJ,CAAC,GAAGX,QAAQ,CACR;IACII,OAAO;IACPC;EACJ,CACJ,CAAC;;EAGD;EACA,oBACIH,OAAA;IAAA,GAAWK,aAAa,CAAC,CAAC;IAAEK,SAAS,EAAC,uDAAuD;IAACC,KAAK,EAAE;MAAE,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACxHZ,OAAA;MAAAY,QAAA,EACKL,YAAY,CAACM,GAAG,CAACC,WAAW,iBACzBd,OAAA;QAAA,GAAQc,WAAW,CAACC,mBAAmB,CAAC,CAAC;QAAAH,QAAA,EACpCE,WAAW,CAACE,OAAO,CAACH,GAAG,CAACI,MAAM,iBAC3BjB,OAAA;UAAAY,QAAA,EACKK,MAAM,CAACC,MAAM,CAAC,QAAQ;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACRtB,OAAA;MAAA,GAAWM,iBAAiB,CAAC,CAAC;MAAAM,QAAA,EACzBJ,IAAI,CAACK,GAAG,CAAC,CAACU,GAAG,EAAEC,CAAC,KAAK;QAClBf,UAAU,CAACc,GAAG,CAAC;QACf,oBACIvB,OAAA;UAAA,GAAQuB,GAAG,CAACE,WAAW,CAAC,CAAC;UAAAb,QAAA,EACpBW,GAAG,CAACG,KAAK,CAACb,GAAG,CAACc,IAAI,IAAI;YACnB,oBACI3B,OAAA;cAAA,GAAQ2B,IAAI,CAACC,YAAY,CAAC,CAAC;cAAAhB,QAAA,EAAGe,IAAI,CAACT,MAAM,CAAC,MAAM;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAE/D,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB;AAAClB,EAAA,CA7CuBH,KAAK;EAAA,QAOrBH,QAAQ;AAAA;AAAA+B,EAAA,GAPQ5B,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}