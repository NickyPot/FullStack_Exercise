{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PotiriadisN\\\\code\\\\fullstack_exercise\\\\web-portal\\\\src\\\\components\\\\sort.js\";\nimport React, { useEffect, useState, Component } from \"react\";\nimport { getAllRecords } from \"../api/records\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let filteredRecords = {};\nexport let listOfIndustries = [];\nexport let selectedIndustry = \"\";\nasync function testSort(e) {\n  const searchValues = {\n    table: \"\",\n    name: \"\"\n  };\n  selectedIndustry = e.target.value;\n  const response = await fetch(`http://localhost:5050/record/search`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      table: \"iotDB\",\n      field: \"Industry\",\n      value: e.target.value\n    })\n  });\n  if (!response.ok) {\n    const message = `An error occurred: ${response.statusText}`;\n    window.alert(message);\n    return;\n  }\n  filteredRecords = await response.json();\n  window.alert(selectedIndustry);\n}\nasync function getListOfIndustries() {\n  let records = await getAllRecords(\"industriesDB\");\n  listOfIndustries = records.map(a => a.name);\n}\ngetListOfIndustries();\nexport class Sort extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"industrySelect\",\n      onChange: testSort,\n      children: listOfIndustries.map(val => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: val,\n        children: val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 46\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n  }\n}","map":{"version":3,"names":["React","useEffect","useState","Component","getAllRecords","jsxDEV","_jsxDEV","filteredRecords","listOfIndustries","selectedIndustry","testSort","e","searchValues","table","name","target","value","response","fetch","method","headers","body","JSON","stringify","field","ok","message","statusText","window","alert","json","getListOfIndustries","records","map","a","Sort","render","onChange","children","val","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/PotiriadisN/code/fullstack_exercise/web-portal/src/components/sort.js"],"sourcesContent":["import React, { useEffect, useState, Component } from \"react\";\r\nimport { getAllRecords } from \"../api/records\";\r\n\r\nexport let filteredRecords = {};\r\nexport let listOfIndustries = [];\r\nexport let selectedIndustry = \"\";\r\n\r\n\r\n\r\nasync function testSort(e) {\r\n    const searchValues ={\r\n        table: \"\",\r\n        name: \"\",\r\n    }\r\n    selectedIndustry = e.target.value;\r\n\r\n    const response = await fetch(`http://localhost:5050/record/search`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body : JSON.stringify({ table: \"iotDB\", field: \"Industry\", value: e.target.value })\r\n\r\n    });\r\n\r\n    if (!response.ok) {\r\n        const message = `An error occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n    }\r\n    filteredRecords = await response.json();\r\n\r\n    window.alert(selectedIndustry);\r\n\r\n\r\n}\r\n\r\nasync function getListOfIndustries(){\r\n    \r\n    let records = await getAllRecords(\"industriesDB\");\r\n    listOfIndustries = records.map(a => a.name);\r\n\r\n\r\n}\r\ngetListOfIndustries();\r\n\r\n\r\nexport class Sort extends Component {\r\n    render() {\r\n        return (\r\n        <select name=\"industrySelect\" onChange={testSort}> \r\n                {listOfIndustries.map(val => <option value={val}>{val}</option>)}\r\n        </select>)\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7D,SAASC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,IAAIC,eAAe,GAAG,CAAC,CAAC;AAC/B,OAAO,IAAIC,gBAAgB,GAAG,EAAE;AAChC,OAAO,IAAIC,gBAAgB,GAAG,EAAE;AAIhC,eAAeC,QAAQA,CAACC,CAAC,EAAE;EACvB,MAAMC,YAAY,GAAE;IAChBC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE;EACV,CAAC;EACDL,gBAAgB,GAAGE,CAAC,CAACI,MAAM,CAACC,KAAK;EAEjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoC,EAAE;IAChEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;MAAEV,KAAK,EAAE,OAAO;MAAEW,KAAK,EAAE,UAAU;MAAER,KAAK,EAAEL,CAAC,CAACI,MAAM,CAACC;IAAM,CAAC;EAEtF,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;IACd,MAAMC,OAAO,GAAI,sBAAqBT,QAAQ,CAACU,UAAW,EAAC;IAC3DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;IACrB;EACJ;EACAnB,eAAe,GAAG,MAAMU,QAAQ,CAACa,IAAI,CAAC,CAAC;EAEvCF,MAAM,CAACC,KAAK,CAACpB,gBAAgB,CAAC;AAGlC;AAEA,eAAesB,mBAAmBA,CAAA,EAAE;EAEhC,IAAIC,OAAO,GAAG,MAAM5B,aAAa,CAAC,cAAc,CAAC;EACjDI,gBAAgB,GAAGwB,OAAO,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACpB,IAAI,CAAC;AAG/C;AACAiB,mBAAmB,CAAC,CAAC;AAGrB,OAAO,MAAMI,IAAI,SAAShC,SAAS,CAAC;EAChCiC,MAAMA,CAAA,EAAG;IACL,oBACA9B,OAAA;MAAQQ,IAAI,EAAC,gBAAgB;MAACuB,QAAQ,EAAE3B,QAAS;MAAA4B,QAAA,EACxC9B,gBAAgB,CAACyB,GAAG,CAACM,GAAG,iBAAIjC,OAAA;QAAQU,KAAK,EAAEuB,GAAI;QAAAD,QAAA,EAAEC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAEb;AAGJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}