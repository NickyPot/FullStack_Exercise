{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PotiriadisN\\\\code\\\\fullstack_exercise\\\\web-portal\\\\src\\\\components\\\\sort.js\";\nimport React, { useEffect, useState, Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let filteredRecords = {};\nasync function testSort(e) {\n  const response = await fetch(`http://localhost:5050/record/table`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      table: \"iotTable\"\n    })\n  });\n  if (!response.ok) {\n    const message = `An error occurred: ${response.statusText}`;\n    window.alert(message);\n    return;\n  }\n  if (table == \"iotDB\") {\n    let iotRecords = await response.json();\n  } else if (table == \"industriesDB\") {\n    let records = await response.json();\n  }\n}\nexport class Sort extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: testSort,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Silicon Manufacturing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Gaming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n}","map":{"version":3,"names":["React","useEffect","useState","Component","jsxDEV","_jsxDEV","filteredRecords","testSort","e","response","fetch","method","headers","body","JSON","stringify","table","ok","message","statusText","window","alert","iotRecords","json","records","Sort","render","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/PotiriadisN/code/fullstack_exercise/web-portal/src/components/sort.js"],"sourcesContent":["import React, { useEffect, useState, Component } from \"react\";\r\n\r\nexport let filteredRecords = {};\r\n\r\nasync function testSort(e) {\r\n    const response = await fetch(`http://localhost:5050/record/table`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ table: \"iotTable\" }),\r\n\r\n    });\r\n\r\n    if (!response.ok) {\r\n        const message = `An error occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n    }\r\n    if (table == \"iotDB\") {\r\n        let iotRecords = await response.json();\r\n    }\r\n    else if (table == \"industriesDB\") {\r\n        let records = await response.json();\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Sort extends Component {\r\n    render() {\r\n        return (\r\n        <select onChange={testSort}> \r\n            <option>Silicon Manufacturing</option>\r\n            <option>Gaming</option>\r\n        </select>)\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,IAAIC,eAAe,GAAG,CAAC,CAAC;AAE/B,eAAeC,QAAQA,CAACC,CAAC,EAAE;EACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmC,EAAE;IAC/DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,KAAK,EAAE;IAAW,CAAC;EAE9C,CAAC,CAAC;EAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;IACd,MAAMC,OAAO,GAAI,sBAAqBT,QAAQ,CAACU,UAAW,EAAC;IAC3DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;IACrB;EACJ;EACA,IAAIF,KAAK,IAAI,OAAO,EAAE;IAClB,IAAIM,UAAU,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;EAC1C,CAAC,MACI,IAAIP,KAAK,IAAI,cAAc,EAAE;IAC9B,IAAIQ,OAAO,GAAG,MAAMf,QAAQ,CAACc,IAAI,CAAC,CAAC;EACvC;AAEJ;AAGA,OAAO,MAAME,IAAI,SAAStB,SAAS,CAAC;EAChCuB,MAAMA,CAAA,EAAG;IACL,oBACArB,OAAA;MAAQsB,QAAQ,EAAEpB,QAAS;MAAAqB,QAAA,gBACvBvB,OAAA;QAAAuB,QAAA,EAAQ;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtC3B,OAAA;QAAAuB,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAEb;AAGJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}